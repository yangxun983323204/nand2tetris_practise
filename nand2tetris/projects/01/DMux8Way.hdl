// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    // Put your code here:
    // tips: array 'sel' is LSB
    DMux(in=in,sel=sel[0],a=ta,b=tb);

    Not(in=sel[0],out=nSel0);
    Not(in=sel[1],out=nSel1);
    Not(in=sel[2],out=nSel2);
    // 00x
    And(a=nSel1,b=nSel2,out=c1);
    And(a=c1,b=ta,out=a);
    And(a=c1,b=tb,out=b);
    // 01x
    And(a=nSel2,b=sel[1],out=c2);
    And(a=c2,b=ta,out=c);
    And(a=c2,b=tb,out=d);
    // 10x
    And(a=sel[2],b=nSel1,out=c3);
    And(a=c3,b=ta,out=e);
    And(a=c3,b=tb,out=f);
    // 11x
    And(a=sel[2],b=sel[1],out=c4);
    And(a=c4,b=ta,out=g);
    And(a=c4,b=tb,out=h);
}