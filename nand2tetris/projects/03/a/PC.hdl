// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:
    // load when reset\load\inc
    Or(a=load,b=reset,out=load0);
    Or(a=load0,b=inc,out=load1);

    Register(in=fPre,load=load1,out=pre,out=out);
    // if reset
    Mux16(a=pre,b[0..15]=false,sel=reset,out=resetOut);
    // if load
    Not(in=reset,out=nreset);
    And(a=nreset,b=load,out=fLoad);
    Mux16(a=resetOut,b=in,sel=fLoad,out=loadOut);
    // if inc
    Not(in=load,out=nload);
    And(a=nreset,b=nload,out=nrl);
    And(a=nrl,b=inc,out=fInc);
    Inc16(in=loadOut,out=incOutT);
    Mux16(a=loadOut,b=incOutT,sel=fInc,out=incOut);
    // else
    Not(in=inc,out=ninc);
    And(a=nrl,b=ninc,out=else);
    Mux16(a=incOut,b=pre,sel=else,out=fPre);
}
